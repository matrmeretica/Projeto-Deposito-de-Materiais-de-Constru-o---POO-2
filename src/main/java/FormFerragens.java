//Lucas Raphael, 2525518 - Mateus Rodrigues, 2503700 - Norberto Junior, 2209136

import javax.swing.JOptionPane;
import java.util.logging.Logger;

/**
 *
 * @author Mateus
 */
public class FormFerragens extends javax.swing.JFrame {

    private static final Logger logger = Logger.getLogger(FormFerragens.class.getName());

    //MÉTODO SINGLETON
    private static FormFerragens formFerragensUnico;

    private BDEstoque bdEstoque = BDEstoque.geraBDEstoque();
    private FerragensModel ferragemAtual = null;

    private FormFerragens() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Depósito do Zé - Cadastro de Ferragens");
    }

    //MÉTODO SINGLETON
    public static FormFerragens geraFormFerragens() {
        if (formFerragensUnico == null) {
            formFerragensUnico = new FormFerragens();
        }
        return formFerragensUnico;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtCadMat = new javax.swing.JLabel();
        rtNomeMat = new javax.swing.JLabel();
        cxNomeMat = new javax.swing.JTextField();
        rtCodMat = new javax.swing.JLabel();
        cxCodMat = new javax.swing.JTextField();
        rtValorMat = new javax.swing.JLabel();
        cxValorMat = new javax.swing.JTextField();
        rtQuantMat = new javax.swing.JLabel();
        cxQuantMat = new javax.swing.JTextField();
        rtFerragens = new javax.swing.JLabel();
        rtTipoMetal = new javax.swing.JLabel();
        cxTipoMetal = new javax.swing.JTextField();
        rtUsoMetal = new javax.swing.JLabel();
        cxUsoMetal = new javax.swing.JTextField();
        btInserir12 = new javax.swing.JButton();
        btConsultar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rtCadMat.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        rtCadMat.setText("Cadastro de Ferragens");

        rtNomeMat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtNomeMat.setText("Nome");

        rtCodMat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtCodMat.setText("Código");

        cxCodMat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxCodMatActionPerformed(evt);
            }
        });

        rtValorMat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtValorMat.setText("Valor");

        rtQuantMat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtQuantMat.setText("Quantidade");

        rtFerragens.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        rtFerragens.setText("Ferragens");

        rtTipoMetal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rtTipoMetal.setText("Tipo de Metal");

        rtUsoMetal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rtUsoMetal.setText("Uso");

        cxUsoMetal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cxUsoMetalActionPerformed(evt);
            }
        });

        btInserir12.setText("Inserir");
        btInserir12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btInserir12ActionPerformed(evt);
            }
        });

        btConsultar.setText("Consultar");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btSair.setText("Sair");
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rtNomeMat)
                                            .addComponent(cxNomeMat, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rtCodMat)
                                            .addComponent(rtValorMat)
                                            .addComponent(cxCodMat, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(rtUsoMetal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rtTipoMetal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(rtFerragens))
                                            .addComponent(cxUsoMetal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cxTipoMetal))
                                        .addGap(72, 72, 72))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rtCadMat)
                                            .addComponent(rtQuantMat)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(cxQuantMat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                                .addComponent(cxValorMat, javax.swing.GroupLayout.Alignment.LEADING)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(btInserir12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btConsultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btLimpar)))
                        .addGap(0, 33, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btSair)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(rtCadMat)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rtNomeMat)
                                    .addComponent(rtFerragens))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cxNomeMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rtTipoMetal))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(rtCodMat))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cxTipoMetal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cxCodMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rtUsoMetal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rtValorMat))
                    .addComponent(cxUsoMetal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cxValorMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rtQuantMat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cxQuantMat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btInserir12)
                    .addComponent(btConsultar)
                    .addComponent(btAlterar)
                    .addComponent(btExcluir)
                    .addComponent(btLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSair)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cxCodMatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxCodMatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxCodMatActionPerformed

    private void cxUsoMetalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cxUsoMetalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cxUsoMetalActionPerformed

    private void btInserir12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btInserir12ActionPerformed
        insereFerragem();
    }//GEN-LAST:event_btInserir12ActionPerformed

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        consultaFerragem();
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        alteraFerragem();
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        excluiFerragem();
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btLimparActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        sairForm();
    }//GEN-LAST:event_btSairActionPerformed

    public void insereFerragem() {
        ferragemAtual = new FerragensModel();
        try {
            if (cxNomeMat.getText().isEmpty() || cxCodMat.getText().isEmpty() || 
                cxValorMat.getText().isEmpty() || cxQuantMat.getText().isEmpty() ||
                cxTipoMetal.getText().isEmpty() || cxUsoMetal.getText().isEmpty()) { 
                JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
                return;
            }

            ferragemAtual.setNome(cxNomeMat.getText()); 
            ferragemAtual.setCodigo(Integer.parseInt(cxCodMat.getText())); 
            ferragemAtual.setValor(Double.parseDouble(cxValorMat.getText())); 
            ferragemAtual.setQuantidade(Integer.parseInt(cxQuantMat.getText())); 
            ferragemAtual.setTipoMetal(cxTipoMetal.getText());
            ferragemAtual.setUso(cxUsoMetal.getText()); 
            
            MateriaisModel materialInserido = bdEstoque.insereMaterial(ferragemAtual);

            if (materialInserido != null) {
                JOptionPane.showMessageDialog(this, "Ferragem cadastrada com sucesso!", "Cadastro de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            } else {
                JOptionPane.showMessageDialog(this, "Já existe uma Ferragem com este Código!", "Cadastro de Ferragem", JOptionPane.ERROR_MESSAGE);
                cxCodMat.requestFocus(); 
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro: Código, Valor ou Quantidade devem ser números válidos!", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
        } catch (PrecoInvalException e) {
            JOptionPane.showMessageDialog(this, "Erro de Preço: " + e.getMessage(), "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Erro de Quantidade: " + e.getMessage(), "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Erro inesperado ao inserir ferragem", e);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void consultaFerragem() {
        try {
            if (cxCodMat.getText().isEmpty()) { 
                JOptionPane.showMessageDialog(this, "Por favor, digite o Código da ferragem para consultar.", "Campo Vazio", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int codigoConsulta = Integer.parseInt(cxCodMat.getText()); 
            MateriaisModel materialEncontrado = bdEstoque.consultaMaterialPorCodigo(codigoConsulta);

            if (materialEncontrado != null) {
                if (materialEncontrado instanceof FerragensModel) {
                    ferragemAtual = (FerragensModel) materialEncontrado;

                    cxNomeMat.setText(ferragemAtual.getNome()); 
                    cxCodMat.setText(String.valueOf(ferragemAtual.getCodigo())); 
                    cxValorMat.setText(String.valueOf(ferragemAtual.getValor())); 
                    cxQuantMat.setText(String.valueOf(ferragemAtual.getQuantidade())); 
                    cxTipoMetal.setText(ferragemAtual.getTipoMetal());
                    cxUsoMetal.setText(ferragemAtual.getUso()); 

                    JOptionPane.showMessageDialog(this, "Ferragem encontrada com sucesso!", "Consulta de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "O material encontrado com este código não é uma Ferragem.", "Consulta de Ferragem", JOptionPane.WARNING_MESSAGE);
                    limparCampos();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ferragem não encontrada!", "Consulta de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro: O Código deve ser um número inteiro válido para consulta!", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            cxCodMat.requestFocus(); 
        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Erro inesperado ao consultar ferragem", e);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado durante a consulta: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void alteraFerragem() {
        try {
            if (cxCodMat.getText().isEmpty()) { 
                JOptionPane.showMessageDialog(this, "Por favor, digite o Código da ferragem a ser alterada.", "Campo Vazio", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int codigoAlteracao = Integer.parseInt(cxCodMat.getText()); 
            MateriaisModel materialExistente = bdEstoque.consultaMaterialPorCodigo(codigoAlteracao);

            if (materialExistente != null) {
                if (materialExistente instanceof FerragensModel) {
                    ferragemAtual = (FerragensModel) materialExistente;

                    if (cxNomeMat.getText().isEmpty() || cxValorMat.getText().isEmpty() || cxQuantMat.getText().isEmpty() ||
                        cxTipoMetal.getText().isEmpty() || cxUsoMetal.getText().isEmpty()) { 
                        JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios para alteração.", "Campos Vazios", JOptionPane.WARNING_MESSAGE);
                        return;
                    }

                    ferragemAtual.setNome(cxNomeMat.getText()); 
                    ferragemAtual.setValor(Double.parseDouble(cxValorMat.getText())); 
                    ferragemAtual.setQuantidade(Integer.parseInt(cxQuantMat.getText())); 
                    ferragemAtual.setTipoMetal(cxTipoMetal.getText());
                    ferragemAtual.setUso(cxUsoMetal.getText()); 
                    
                    MateriaisModel materialAtualizado = bdEstoque.alteraMaterial(ferragemAtual);

                    if (materialAtualizado != null) {
                        JOptionPane.showMessageDialog(this, "Ferragem alterada com sucesso!", "Alteração de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                        limparCampos();
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao alterar ferragem. Verifique o Código ou dados inválidos.", "Alteração de Ferragem", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "O material com este código não é uma Ferragem e não pode ser alterado por este formulário.", "Alteração de Ferragem", JOptionPane.WARNING_MESSAGE);
                    limparCampos();
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ferragem não encontrada para alteração! Por favor, consulte primeiro.", "Alteração de Ferragem", JOptionPane.WARNING_MESSAGE);
                cxCodMat.requestFocus(); 
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro: Código, Valor, Quantidade ou Espessura devem ser números válidos para alteração!", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
        } catch (PrecoInvalException e) {
            JOptionPane.showMessageDialog(this, "Erro de Preço na alteração: " + e.getMessage(), "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Erro de Quantidade na alteração: " + e.getMessage(), "Erro de Validação", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Erro inesperado ao alterar ferragem", e);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado durante a alteração: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void excluiFerragem() {
        try {
            if (cxCodMat.getText().isEmpty()) { 
                JOptionPane.showMessageDialog(this, "Por favor, digite o Código da ferragem a ser excluída.", "Campo Vazio", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int codigoExclusao = Integer.parseInt(cxCodMat.getText()); 

            MateriaisModel materialEncontrado = bdEstoque.consultaMaterialPorCodigo(codigoExclusao);
            if (materialEncontrado != null && !(materialEncontrado instanceof FerragensModel)) {
                 JOptionPane.showMessageDialog(this, "O material com este código não é uma Ferragem e não pode ser excluído por este formulário.", "Exclusão de Ferragem", JOptionPane.WARNING_MESSAGE);
                 limparCampos();
                 return;
            }

            int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Tem certeza que deseja excluir a ferragem com Código: " + codigoExclusao + "?",
                    "Confirmação de Exclusão",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirm == JOptionPane.YES_OPTION) {
                MateriaisModel materialRemovido = bdEstoque.excluiMaterial(codigoExclusao);

                if (materialRemovido != null) {
                    if (materialRemovido instanceof FerragensModel) {
                        JOptionPane.showMessageDialog(this, "Ferragem excluída com sucesso!", "Exclusão de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Material excluído (não era ferragem, mas o código foi encontrado).", "Exclusão de Material", JOptionPane.INFORMATION_MESSAGE);
                    }
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(this, "Ferragem não encontrada para exclusão!", "Exclusão de Ferragem", JOptionPane.INFORMATION_MESSAGE);
                    cxCodMat.requestFocus(); 
                }
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(this, "Erro: O Código deve ser um número inteiro válido para exclusão!", "Erro de Entrada", JOptionPane.ERROR_MESSAGE);
            cxCodMat.requestFocus(); 
        } catch (Exception e) {
            logger.log(java.util.logging.Level.SEVERE, "Erro inesperado ao excluir ferragem", e);
            JOptionPane.showMessageDialog(this, "Ocorreu um erro inesperado durante a exclusão: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void limparCampos() {
        cxNomeMat.setText(""); 
        cxCodMat.setText(""); 
        cxValorMat.setText(""); 
        cxQuantMat.setText(""); 
        cxTipoMetal.setText("");
        cxUsoMetal.setText(""); 
        cxNomeMat.requestFocus(); 
    }
    
    public void sairForm() {
        int resp = JOptionPane.showConfirmDialog(
                this,
                "Deseja realmente fechar o cadastro de ferragens?",
                "Saída",
                JOptionPane.YES_NO_OPTION
        );
        if (resp == JOptionPane.YES_OPTION) {
            dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btInserir12;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSair;
    private javax.swing.JTextField cxCodMat;
    private javax.swing.JTextField cxNomeMat;
    private javax.swing.JTextField cxQuantMat;
    private javax.swing.JTextField cxTipoMetal;
    private javax.swing.JTextField cxUsoMetal;
    private javax.swing.JTextField cxValorMat;
    private javax.swing.JLabel rtCadMat;
    private javax.swing.JLabel rtCodMat;
    private javax.swing.JLabel rtFerragens;
    private javax.swing.JLabel rtNomeMat;
    private javax.swing.JLabel rtQuantMat;
    private javax.swing.JLabel rtTipoMetal;
    private javax.swing.JLabel rtUsoMetal;
    private javax.swing.JLabel rtValorMat;
    // End of variables declaration//GEN-END:variables
}
